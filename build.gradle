plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.mod_name + "-" + project.mod_version + "+" + project.version_meta
group = project.mod_group

minecraft {
}

dependencies {
	// Minecraft
    minecraft "com.mojang:minecraft:${minecraft_version}"

    // Yarn
    mappings "net.fabricmc:yarn:${yarn_mappings}:${tiny_version}"

    // Fabric Loader
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${api_version}"
	
	// ModMenu
    modImplementation "io.github.prospector:modmenu:${modmenu_version}"
	
	// RoughlyEnoughItems
    modImplementation "me.shedaniel:RoughlyEnoughItems:${rei_version}"
}

processResources {
	inputs.property "version", "${mod_version}"

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": "${mod_version}"
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "${mod_group}",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : "${mod_name}",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "${mod_group}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${mod_name}.mixins.json"
        ])
    }
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		mavenLocal()
	}
}
